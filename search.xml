<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[JavaScriptExercise]]></title>
      <url>/2017/09/07/JavaScriptExercise/</url>
      <content type="html"><![CDATA[<p>JavaScriptExercise</p>
<p>String 1 : 使用字符串方法，将 “audacity” 转换为 “Udacity”。</p>
<p>var s = “audacity”;<br>s = s[1].toUpperCase() + s.slice(2);</p>
<p>让我们详细解释一下。</p>
<p>s[1]<br>首先，我希望 “U” 为大写字母，所以我使用 “U” 的索引（即 1）， 使用括号进行捕捉。JavaScript 让我们使用括号选择字符串中的一个字符（以后， 你会发现，使用数组可完成相同的任务）。</p>
<p>s[1].toUpperCase()<br>.toUpperCase() 是一个字符串方法，意味着该方法作用于它所附加到的 string， 在本例中为 s[1] 中的 “U”。</p>
<p>此时，s[1].toUpperCase() 等于 “U”。</p>
<p>+<br>+用于将字符串连接或添加到一起。例如， “Hello “ + “JS students!” 将产生 “Hello JS students!”。</p>
<p>s.slice(2)<br>.slice() 是另外一个字符串方法，在本例中作用于字符串 s。.slice(start, [end]) 将捕捉从 start 索引到 end 索引的字符串部分。[end] 显示在括号中， 表示可选。如果未显示在括号中， 则 .slice() 将选择从 start 到字符串末尾的所有字符串。s.slice(2) 给出了 “dacity”。</p>
<p>连接到一起，得到 “Udacity”！</p>
<p>String 2 : 假定有一个由两个单词组成的姓名字符串，其中混合使用了大小写，你是否可对字符串进行处理，确保名字的首字母大写，且姓氏全部大写么？假定名字和姓氏之间有一个空格。例如，将类似于 “cAmEROn PittMAN” 的字符串转变为 “Cameron PITTMAN”。 你的答案应为一个字符串，保存到名为 finalName 的变量中。</p>
<p>var name = “AlbERt EINstEiN”;<br>function nameChanger(oldName) {<br>    var finalName = oldName;<br>    var names = oldName.split(“ “);<br>    names[1] = names[1].toUpperCase();<br>    names[0] = names[0].slice(0,1).toUpperCase() + names[0].slice(1).toLowerCase();<br>    finalName = names.join(“ “);<br>    return finalName;<br>}<br>console.log(nameChanger(name));</p>
<p>详细解释：<br>var names = oldName.split(“ “)<br>这里，我们正在创建一个名称数组， 用空格将原始名称分开来。此时，对于我们的原始示例，names === [“AlbERt”, “EINstEiN”]</p>
<p>names[1] = names[1].toUpperCase();<br>string.toUpperCase() 方法所做的工作恰好就是方法名称所描述的那样。它对 names[1]（即原始示例中的 “EINstEiN”）起作用。因此，这里，我们要将 names 数组中的第二个元素重新分配到全大写的 “EINSTEIN”。</p>
<p>names[0] = names[0].slice(0,1).toUpperCase() + names[0].slice(1).toLowerCase();<br>此行生成 Albert。names[0].slice(0,1).toUpperCase() 首先作用于 names 数组中的第一个元素，即示例中的 “AlbERt”。然后，通过使用 .slice(0,1) 只获取第一个字母。接下来，我们再次使用 .toUpperCase() 方法以确保首字母大写。此外，请注意我们如何在此处将两个方法链接在一起。</p>
<p>下个部分 names[0].slice(1).toLowerCase() 的作用方式类似， 不过这次我们使用 .slice(1) 来捕捉第一个字符串的剩余部分， 即此示例中的 “lbERt”。然后我们只链接 .toLowerCase() 方法以确保名字的剩余字母为小写。如果首字母大写且剩余字母小写， 则使用 + 将二者连接到一起。</p>
<p>finalName = names.join(“ “);<br>array.join([chars]) 让我们将数组元素全部放到一个字符串中。每个元素将由可选的 chars 分开。在本例中，我们想在名字和姓氏之间加个空格， 所以将 chars 变为 “ “。</p>
<p>利用这种方法，我们将 “Albert” 和 “Einstein” 连接到一起， 形成 “Albert EINSTEIN”！</p>
]]></content>
      
        
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[About React-Native]]></title>
      <url>/2017/08/07/About-React-Native/</url>
      <content type="html"><![CDATA[<p>I’ve learned about JavaScript in the month of June and then study Java.<br>Now go back to React-Native.<br>With RN, I’ll complete my project “PlayList”.</p>
]]></content>
      
        
        <tags>
            
            <tag> React-Native </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JAVA STUDY 01]]></title>
      <url>/2017/08/04/Java%20Study/</url>
      <content type="html"><![CDATA[<p>Methods</p>
<ul>
<li>Defining &amp; Calling Methods</li>
<li>Inputs &amp; Output of A Method<br>e.g.<br>1 submitOrder(…){<br>calculatePrice(…);<br>}<br>2 cacalculatePrice(…){<strong><strong><strong><strong>_</strong></strong></strong></strong>}<br>1 to 2   zero or more input parameters（输入参数）<br>2 to 1   zero or one return value（返回值）</li>
<li>Defining a method<br>e.g.<br>   private int calculatePrice(int quantity){ }<br>“private” : Access modifer（访问修饰符） Who has access to this method?  Private or Public ？<br>“int”: Return data type（输出返回数据类型）<br>“calculatePrice”: Method name（用动词开头）<br>“int”: Parameter data type（输入参数类型）<br>“quantity”: Parameter variable name</li>
<li>Input Parameters<br>The inputs passed to a method can be called arguments.（实参）<br>NOTE：Parameters refers to the list of variables in a method declaration. Arguments are the actual values that are passed in when the method is invoked. When you invoke a method, the arguments used must match the declaration’s parameters in type and order.</li>
<li>Return Values<br>a.return price;<br>b.if you don’t need a return value, build a void return value type, like this :<br>private void price(int quantity){<br>}<br>c.codes are unreachable after return.<br>d.specify return data type.<br>e.remenber always add comments.<br>f.numbers should not be in quotes</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> java </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Project:PlayList]]></title>
      <url>/2017/08/01/Project-PlayList/</url>
      <content type="html"><![CDATA[<p>Start a new project called “PlayList”, which is for youtube users to build a 24hrs playlist.</p>
<p>Stages:</p>
<ol>
<li>Design the Main Activity</li>
<li>Edit the Main Activity (select the Views and Groups ,then position and style the Views)</li>
<li>Create a Second Activity</li>
<li>……<br>…….<br><img src="https://github.com/rwStarnight/Images/raw/master/DraftForPlayList.jpg" alt="photo00"></li>
</ol>
]]></content>
      
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Blog]]></title>
      <url>/2017/07/30/Blog/</url>
      <content type="html"><![CDATA[<p>changed  blog’s scheme to NexT.Pisces</p>
<p>added a social link, my GithHub, and then went wrong, tried to debug _config.yml, finally made it!</p>
]]></content>
      
        
        <tags>
            
            <tag> blog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android]]></title>
      <url>/2017/07/29/android/</url>
      <content type="html"><![CDATA[<p>I’m working on some demo apps since this week.</p>
<p>Learning XML which is uesed to build app’s UI.</p>
<p>Learning to build variable and scope.</p>
<p>I can make a simple screen app like coffee order app now.</p>
<p>It is a long way.</p>
]]></content>
      
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/07/07/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
